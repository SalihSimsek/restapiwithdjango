# Generated by Django 3.1.1 on 2020-10-10 13:07

import account.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(max_length=20, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=20, verbose_name='last_name')),
                ('email', models.CharField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('biography', models.CharField(blank=True, max_length=150, null=True, verbose_name='biography')),
                ('image', models.ImageField(blank=True, default='default/default.jpeg', null=True, upload_to=account.models.upload_location, verbose_name='profile_image')),
                ('is_secret', models.BooleanField(default=False, verbose_name='is_secret')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last_login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('follow', models.ManyToManyField(blank=True, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='follows')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
